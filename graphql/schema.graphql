"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")
scalar JSON @scalar(class: "MLL\\GraphQLScalars\\JSON")
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

"Import graphql schema files"
#import rendered_score.graphql
#import lilypond_parts_sheet_music.graphql
#import visit_info.graphql
#import author_song_lyric.graphql
#import author.graphql
#import user.graphql
#import song_lyric.graphql
#import song_lyric_part.graphql
#import songbook.graphql
#import songbook_record.graphql
#import song.graphql
#import file.graphql
#import external.graphql
#import tag.graphql
#import playlist.graphql
#import public_user.graphql
#import model.graphql
#import lilypond.graphql
#import visit.graphql
#import news.graphql
#import upload_file.graphql
#import liturgical_reference.graphql


union SearchResult = SongLyric | Author

type FilterTagCategory {
    name: String
    selected_tags: [Tag!]!
}

type Query {
    well_hello_there(id: ID! @eq): Author @find @deprecated(reason: "Only a dummy thing to comply with graphql schema")
}

type Mutation @guard {
    well_hello_there(id: ID! @eq): Author @find @deprecated(reason: "Only a dummy thing to comply with graphql schema")
}
