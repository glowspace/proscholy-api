type File {
    id: ID!
    public_name: String
    url: String
    download_url: String
    type: Int
    type_string: String
    type_string_values: JSON
    authors: [Author] @belongsToMany
    song_lyric: SongLyric @belongsTo
    thumbnail_url: String
    description: String
    name: String
    filename: String
    external_type: Int
    catalog_number: String
    copyright: String
    editor: String """ autor not """
    published_by: String

    tags: [Tag] @morphMany
    tags_instrumentation: [Tag] @morphMany(relation: "tags", scopes: ["instrumentation"])
}

extend type Query  {
    files (
        type: Int
        is_todo: Boolean
    ): [File!]! # see App/GraphQL/Queries/Files.php

    file(id: ID! @eq): File @find
}

extend type Mutation @guard {
    update_file(input: UpdateFileInput! @spread): File @update

    delete_file(id: ID!): File @delete
}

input UpdateFileInput {
    id: ID!
    name: String
    description: String
    type: Int!
    authors: SyncAuthorsRelation
    song_lyric: SyncSongLyricRelation
    catalog_number: String
    copyright: String
    editor: String
    published_by: String
    filename: String @rules(apply: ["required", "regex:/^([a-zA-Z0-9\\s_.\\-\\(\\):])+\\.[a-zA-Z0-9]+$/"], messages: {
        required: "Jméno souboru nesmí zůstat prázdné",
        regex: "Neplatné jméno souboru, používejte prosím pouze znaky bez diakritiky a nezapomeňte na příponu souboru (např. .pdf, .jpg apod..)"})
}
